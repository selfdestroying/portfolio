---
import AstroJS from './Icons/AstroJS.astro'
import Docker from './Icons/Docker.astro'
import Express from './Icons/Express.astro'
import JavaScript from './Icons/JavaScript.astro'
import NextJS from './Icons/NextJS.astro'
import NodeJS from './Icons/NodeJS.astro'
import PostgreSQL from './Icons/PostgreSQL.astro'
import Python from './Icons/Python.astro'
import ReactJS from './Icons/ReactJS.astro'
import Redis from './Icons/Redis.astro'
import Tailwind from './Icons/Tailwind.astro'
import TypeScript from './Icons/TypeScript.astro'
type Icons =
	| 'react'
	| 'nextjs'
	| 'astro'
	| 'typescript'
	| 'javascript'
	| 'python'
	| 'tailwind'
	| 'docker'
	| 'express'
	| 'node'
	| 'postgresql'
	| 'redis'
interface Props {
	isEnd?: boolean
	icon: Icons
	link?: string
}
const { isEnd = false, icon, link = '#' } = Astro.props
const iconMap = {
	react: ReactJS,
	nextjs: NextJS,
	astro: AstroJS,
	typescript: TypeScript,
	javascript: JavaScript,
	python: Python,
	tailwind: Tailwind,
	docker: Docker,
	express: Express,
	node: NodeJS,
	postgresql: PostgreSQL,
	redis: Redis,
}
const IconComponent = iconMap[icon]
---

<div class='stack'>
	<a href={link} class='stack-link' target='_blank'>
		<div class='stack-header'>
			<div class='stack-icon'>
				<IconComponent size={44} viewBox='0 0 128 128' />
			</div>
			<div class='stack-title'>
				<slot name='title' class='stack-title-text' />
				<slot name='role' class='role' />
			</div>
		</div>
		<!-- {
			!isEnd && (
				<div class='stack-description'>
					<div class='line-container'>
						<div class='line' />
					</div>
					<div class='description-container'>
						<slot name='description' />
					</div>
				</div>
			)
		} -->
	</a>
</div>

<style is:inline>
	.stack {
		max-width: 752px;
		width: 100%;
		line-height: 1.4em;
	}
	.stack-link {
		width: 100%;
		height: 100%;
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		justify-content: flex-start;
		gap: 8px;
	}
	.stack-header {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: flex-start;
		gap: 8px;
	}
	.stack-icon {
		width: 68px;
		height: 68px;
		display: flex;
		align-items: center;
		justify-content: center;
		background-color: var(--dark-10);
		border-radius: 24px;
	}
	.stack-title {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		justify-content: center;
		gap: 2px;
	}
	.role {
		font-size: 14px;
		line-height: 1.2em;
		color: var(--light-60);
		font-weight: 300;
	}
	.stack-description {
		align-items: flex-start;
		display: flex;
		flex-direction: row;
		flex: none;
		flex-wrap: nowrap;
		gap: 8px;
		height: min-content;
		justify-content: flex-start;
		overflow: hidden;
		width: 100%;
	}
	.line-container {
		width: 68px;
		flex: none;
		align-self: stretch;
		display: flex;
		@media screen and (max-width: 800px) {
			display: none;
		}
		flex: none;
		height: auto;
		align-items: center;
		justify-content: center;
	}
	.line {
		height: 100%;
		width: 2px;
		background-color: var(--dark-10);
	}
	.description-container {
		width: 100%;
		padding: 0 0 24px;
	}
	.description {
		font-weight: 300;
		color: var(--light-60);
		font-size: 16px;
		line-height: 1.4em;
		text-wrap: wrap;
		overflow-wrap: break-word;
		word-wrap: break-word;
	}
</style>
